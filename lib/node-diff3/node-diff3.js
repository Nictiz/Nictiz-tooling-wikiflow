/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/node-diff3@2.0.1/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).Diff3={})}(this,function(e){"use strict";function t(e,t){let n={};for(let e=0;e<t.length;e++){const f=t[e];n[f]?n[f].push(e):n[f]=[e]}let f=[{buffer1index:-1,buffer2index:-1,chain:null}];for(let t=0;t<e.length;t++){const r=n[e[t]]||[];let o=0,u=f[0];for(let e=0;e<r.length;e++){const n=r[e];let l;for(l=o;l<f.length&&!(f[l].buffer2index<n&&(l===f.length-1||f[l+1].buffer2index>n));l++);if(l<f.length){const e={buffer1index:t,buffer2index:n,chain:f[l]};if(o===f.length?f.push(u):f[o]=u,u=e,(o=l+1)===f.length)break}}f[o]=u}return f[f.length-1]}function n(e,n){const f=t(e,n);let r=[],o=e.length,u=n.length,l={common:[]};function c(){l.common.length&&(l.common.reverse(),r.push(l),l={common:[]})}for(let t=f;null!==t;t=t.chain){let f={buffer1:[],buffer2:[]};for(;--o>t.buffer1index;)f.buffer1.push(e[o]);for(;--u>t.buffer2index;)f.buffer2.push(n[u]);(f.buffer1.length||f.buffer2.length)&&(c(),f.buffer1.reverse(),f.buffer2.reverse(),r.push(f)),o>=0&&l.common.push(e[o])}return c(),r.reverse(),r}function f(e,n){const f=t(e,n);let r=[],o=e.length,u=n.length;for(let t=f;null!==t;t=t.chain){const f=o-t.buffer1index-1,l=u-t.buffer2index-1;o=t.buffer1index,u=t.buffer2index,(f||l)&&r.push({buffer1:[o+1,f],buffer1Content:e.slice(o+1,o+1+f),buffer2:[u+1,l],buffer2Content:n.slice(u+1,u+1+l)})}return r.reverse(),r}function r(e,t,n){let r=[];function o(e,t){r.push({ab:t,oStart:e.buffer1[0],oLength:e.buffer1[1],abStart:e.buffer2[0],abLength:e.buffer2[1]})}f(t,e).forEach(e=>o(e,"a")),f(t,n).forEach(e=>o(e,"b")),r.sort((e,t)=>e.oStart-t.oStart);let u=[],l=0;function c(e){e>l&&(u.push({stable:!0,buffer:"o",bufferStart:l,bufferLength:e-l,bufferContent:t.slice(l,e)}),l=e)}for(;r.length;){let f=r.shift(),o=f.oStart,s=f.oStart+f.oLength,i=[f];for(c(o);r.length;){const e=r[0],t=e.oStart;if(t>s)break;s=Math.max(s,t+e.oLength),i.push(r.shift())}if(1===i.length){if(f.abLength>0){const t="a"===f.ab?e:n;u.push({stable:!0,buffer:f.ab,bufferStart:f.abStart,bufferLength:f.abLength,bufferContent:t.slice(f.abStart,f.abStart+f.abLength)})}}else{let r={a:[e.length,-1,t.length,-1],b:[n.length,-1,t.length,-1]};for(;i.length;){const e=(f=i.shift()).oStart,t=e+f.oLength,n=f.abStart,o=n+f.abLength;let u=r[f.ab];u[0]=Math.min(n,u[0]),u[1]=Math.max(o,u[1]),u[2]=Math.min(e,u[2]),u[3]=Math.max(t,u[3])}const l=r.a[0]+(o-r.a[2]),c=r.a[1]+(s-r.a[3]),a=r.b[0]+(o-r.b[2]),h=r.b[1]+(s-r.b[3]);let b={stable:!1,aStart:l,aLength:c-l,aContent:e.slice(l,c),oStart:o,oLength:s-o,oContent:t.slice(o,s),bStart:a,bLength:h-a,bContent:n.slice(a,h)};u.push(b)}l=s}return c(t.length),u}function o(e,t,n,f){f=Object.assign({excludeFalseConflicts:!0,stringSeparator:/\s+/},f);const o="string"==typeof t,u="string"==typeof n;"string"==typeof e&&(e=e.split(f.stringSeparator)),o&&(t=t.split(f.stringSeparator)),u&&(n=n.split(f.stringSeparator));let l=[];const c=r(e,t,n);let s=[];function i(){s.length&&l.push({ok:s}),s=[]}return c.forEach(e=>{e.stable?s.push(...e.bufferContent):f.excludeFalseConflicts&&function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}(e.aContent,e.bContent)?s.push(...e.aContent):(i(),l.push({conflict:{a:e.aContent,aIndex:e.aStart,o:e.oContent,oIndex:e.oStart,b:e.bContent,bIndex:e.bStart}}))}),i(),l}e.LCS=t,e.diff3Merge=o,e.diff3MergeRegions=r,e.diffComm=n,e.diffIndices=f,e.diffPatch=function(e,n){const f=t(e,n);let r=[],o=e.length,u=n.length;function l(e,t,n){let f=[];for(let r=0;r<n;r++)f.push(e[t+r]);return{offset:t,length:n,chunk:f}}for(let t=f;null!==t;t=t.chain){const f=o-t.buffer1index-1,c=u-t.buffer2index-1;o=t.buffer1index,u=t.buffer2index,(f||c)&&r.push({buffer1:l(e,t.buffer1index+1,f),buffer2:l(n,t.buffer2index+1,c)})}return r.reverse(),r},e.invertPatch=function(e){return e.map(e=>({buffer1:e.buffer2,buffer2:e.buffer1}))},e.merge=function(e,t,n,f){const r=o(e,t,n,f=Object.assign({excludeFalseConflicts:!0,stringSeparator:/\s+/},f));let u=!1,l=[];for(let e=0;e<r.length;e++){const t=r[e];t.ok?l=l.concat(t.ok):(u=!0,l=l.concat(["\n<<<<<<<<<\n"],t.conflict.a,["\n=========\n"],t.conflict.b,["\n>>>>>>>>>\n"]))}return{conflict:u,result:l}},e.mergeDigIn=function(e,t,f,r){const u=o(e,t,f,r=Object.assign({excludeFalseConflicts:!1,stringSeparator:/\s+/},r));let l=!1,c=[];for(let e=0;e<u.length;e++){const t=u[e];if(t.ok)c=c.concat(t.ok);else{const e=n(t.conflict.a,t.conflict.b);for(let t=0;t<e.length;t++){let n=e[t];n.common?c=c.concat(n.common):(l=!0,c=c.concat(["\n<<<<<<<<<\n"],n.buffer1,["\n=========\n"],n.buffer2,["\n>>>>>>>>>\n"]))}}}return{conflict:l,result:c}},e.patch=function(e,t){let n=[],f=0;function r(t){for(;f<t;)n.push(e[f]),f++}for(let e=0;e<t.length;e++){let o=t[e];r(o.buffer1.offset);for(let e=0;e<o.buffer2.chunk.length;e++)n.push(o.buffer2.chunk[e]);f+=o.buffer1.length}return r(e.length),n},e.stripPatch=function(e){return e.map(e=>({buffer1:{offset:e.buffer1.offset,length:e.buffer1.length},buffer2:{chunk:e.buffer2.chunk}}))},Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=/sm/a624545555bb05960e5816c8ff95262a3a509ae01af4ce190445eaf5149f86f7.map